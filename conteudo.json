{
  "PARTE ESTRUTURAL": [
    "```ascii",
    " solo-leveling-game/",
    " ├── index.html",
    " ├── style.css",
    " ├── script.js",
    " └── svg/",
    "     ├── player.svg",
    "     └── enemy.svg",
    "```"
  ],
  "PARTE 1": {
    "arquivo": "index.html",
    "codigo": [
      "<!DOCTYPE html>",
      "<html lang=\"pt-br\">",
      "<head>",
      "    <meta charset=\"UTF-8\">",
      "    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">",
      "    <title>Solo Leveling - Mini Game</title>",
      "    <link rel=\"stylesheet\" href=\"style.css\">",
      "</head>",
      "<body>",
      "    <div id=\"game-container\">",
      "        <h1>Solo Leveling</h1>",
      "        ",
      "        <div id=\"arena\">",
      "            <div id=\"player-area\">",
      "                <h2>Caçador</h2>",
      "                <img id=\"player-img\" src=\"svg/player.svg\" alt=\"Jogador\">",
      "                <div id=\"player-stats\">",
      "                    <p>Level: <span id=\"player-level\">1</span></p>",
      "                    <p>HP: <span id=\"player-hp\">100</span> / <span id=\"player-max-hp\">100</span></p>",
      "                    <div class=\"hp-bar-container\">",
      "                       <div id=\"player-hp-bar\" class=\"hp-bar\"></div>",
      "                    </div>",
      "                    <p>XP: <span id=\"player-xp\">0</span> / <span id=\"player-max-xp\">50</span></p>",
      "                     <div class=\"xp-bar-container\">",
      "                       <div id=\"player-xp-bar\" class=\"xp-bar\"></div>",
      "                    </div>",
      "                    <p>Ataque: <span id=\"player-attack\">10</span></p>",
      "                </div>",
      "            </div>",
      "",
      "            <div id=\"enemy-area\">",
      "                <h2 id=\"enemy-name\">Monstro</h2>",
      "                 <img id=\"enemy-img\" src=\"svg/enemy.svg\" alt=\"Inimigo\" title=\"Clique para atacar\">",
      "                 <div id=\"enemy-stats\">",
      "                    <p>Level: <span id=\"enemy-level\">1</span></p>",
      "                    <p>HP: <span id=\"enemy-hp\">50</span> / <span id=\"enemy-max-hp\">50</span></p>",
      "                     <div class=\"hp-bar-container\">",
      "                       <div id=\"enemy-hp-bar\" class=\"hp-bar\"></div>",
      "                    </div>",
      "                    <p>Ataque: <span id=\"enemy-attack\">5</span></p>",
      "                </div>",
      "                 <p id=\"damage-indicator\"></p> ",
      "            </div>",
      "        </div>",
      "",
      "        <div id=\"game-log\">",
      "            <h3>Log de Batalha</h3>",
      "            <ul id=\"log-list\">",
      "               <li>Bem-vindo, Caçador! Derrote o monstro.</li>",
      "            </ul>",
      "        </div>",
      "    </div>",
      "",
      "    <script src=\"script.js\"></script>",
      "</body>",
      "</html>"
    ]
  },
  "PARTE 2": {
    "arquivo": "style.css",
    "codigo": [
      "body {",
      "    font-family: 'Segoe UI', Tahoma, Geneva, Verdana, sans-serif;",
      "    background-color: #1a1a2e; /* Fundo escuro azulado/roxo */",
      "    color: #e0e0e0;",
      "    display: flex;",
      "    justify-content: center;",
      "    align-items: center;",
      "    min-height: 100vh;",
      "    margin: 0;",
      "}",
      "",
      "#game-container {",
      "    background-color: #16213e; /* Azul mais escuro */",
      "    padding: 20px;",
      "    border-radius: 10px;",
      "    box-shadow: 0 0 20px rgba(0, 191, 255, 0.5); /* Sombra azul brilhante */",
      "    text-align: center;",
      "    border: 1px solid #0f3460;",
      "}",
      "",
      "h1 {",
      "    color: #00bfff; /* Deep Sky Blue */",
      "    margin-bottom: 20px;",
      "    text-shadow: 0 0 10px #00bfff;",
      "}",
      "",
      "#arena {",
      "    display: flex;",
      "    justify-content: space-around;",
      "    align-items: flex-start;",
      "    margin-bottom: 20px;",
      "    gap: 40px; /* Espaço entre jogador e inimigo */",
      "}",
      "",
      "#player-area, #enemy-area {",
      "    background-color: #1a1a2e;",
      "    padding: 15px;",
      "    border-radius: 8px;",
      "    border: 1px solid #537895;",
      "    width: 250px;",
      "    min-height: 350px;",
      "    display: flex;",
      "    flex-direction: column;",
      "    align-items: center;",
      "}",
      "",
      "h2 {",
      "    color: #e94560; /* Vermelho/Rosa */",
      "    margin-top: 0;",
      "    margin-bottom: 10px;",
      "}",
      "",
      "#player-area h2 {",
      "   color: #00bfff; /* Azul para o jogador */",
      "}",
      "",
      "#player-img, #enemy-img {",
      "    width: 100px;",
      "    height: 100px;",
      "    margin-bottom: 15px;",
      "    object-fit: contain;",
      "    transition: transform 0.1s ease-in-out;",
      "}",
      "",
      "#enemy-img {",
      "    cursor: pointer;",
      "}",
      "",
      "#enemy-img:hover {",
      "    transform: scale(1.05);",
      "}",
      "",
      ".hp-bar-container, .xp-bar-container {",
      "    width: 100%;",
      "    background-color: #555;",
      "    border-radius: 5px;",
      "    height: 15px;",
      "    margin: 5px 0 10px 0;",
      "    overflow: hidden; /* Garante que a barra interna não transborde */",
      "    border: 1px solid #333;",
      "}",
      "",
      ".hp-bar {",
      "    height: 100%;",
      "    background-color: #e74c3c; /* Vermelho para HP */",
      "    border-radius: 5px 0 0 5px;",
      "    transition: width 0.3s ease;",
      "    width: 100%; /* Começa cheio */",
      "}",
      "",
      "#player-hp-bar {",
      "    background-color: #2ecc71; /* Verde para HP do jogador */",
      "}",
      "",
      "#player-xp-bar {",
      "    background-color: #3498db; /* Azul para XP */",
      "    height: 100%;",
      "    border-radius: 5px 0 0 5px;",
      "    transition: width 0.3s ease;",
      "    width: 0%; /* Começa vazio */",
      "}",
      "",
      "#game-log {",
      "    background-color: #1a1a2e;",
      "    border: 1px solid #537895;",
      "    border-radius: 5px;",
      "    padding: 10px;",
      "    margin-top: 20px;",
      "    height: 150px;",
      "    overflow-y: auto; /* Adiciona scroll se o log ficar grande */",
      "    text-align: left;",
      "}",
      "",
      "#game-log h3 {",
      "    margin-top: 0;",
      "    color: #f1c40f; /* Amarelo */",
      "    text-align: center;",
      "}",
      "",
      "#log-list {",
      "    list-style: none;",
      "    padding: 0;",
      "    margin: 0;",
      "}",
      "",
      "#log-list li {",
      "    padding: 3px 0;",
      "    border-bottom: 1px dashed #444;",
      "    font-size: 0.9em;",
      "}",
      "",
      "#log-list li:last-child {",
      "    border-bottom: none;",
      "}",
      "",
      ".player-attack-anim {",
      "    animation: playerAttack 0.3s ease-in-out;",
      "}",
      "",
      "@keyframes playerAttack {",
      "    0% { transform: translateX(0); }",
      "    50% { transform: translateX(10px); }",
      "    100% { transform: translateX(0); }",
      "}",
      "",
      ".enemy-hit-anim {",
      "    animation: enemyHit 0.2s ease-in-out;",
      "}",
      "",
      "@keyframes enemyHit {",
      "    0% { transform: translateX(0); }",
      "    25% { transform: translateX(-5px) rotate(-2deg); }",
      "    50% { transform: translateX(5px) rotate(2deg); }",
      "    75% { transform: translateX(-3px) rotate(-1deg); }",
      "    100% { transform: translateX(0) rotate(0); }",
      "}",
      "",
      ".player-hit-anim {",
      "    animation: playerHit 0.2s ease-in-out;",
      "}",
      "",
      "@keyframes playerHit {",
      "     0% { filter: brightness(1); }",
      "    50% { filter: brightness(1.5) contrast(1.2); transform: scale(1.02); }",
      "    100% { filter: brightness(1); transform: scale(1); }",
      "}",
      "",
      "#damage-indicator {",
      "    position: absolute;",
      "    /* Ajuste a posição conforme necessário perto do inimigo */",
      "    top: 120px; /* Exemplo */",
      "    /* left: 50%; */",
      "    /* transform: translateX(-50%); */",
      "    font-size: 1.5em;",
      "    font-weight: bold;",
      "    color: red;",
      "    text-shadow: 1px 1px 2px black;",
      "    opacity: 0;",
      "    transition: opacity 0.5s ease-out, transform 0.5s ease-out;",
      "    pointer-events: none; /* Não interfere com cliques */",
      "}",
      "",
      ".show-damage {",
      "    opacity: 1;",
      "    transform: translateY(-30px);",
      "}"
    ]
  },
  "PARTE 3": {
    "arquivo": "script.js",
    "codigo": [
      "// Elementos da UI",
      "const playerLevelEl = document.getElementById('player-level');",
      "const playerHpEl = document.getElementById('player-hp');",
      "const playerMaxHpEl = document.getElementById('player-max-hp');",
      "const playerHpBarEl = document.getElementById('player-hp-bar');",
      "const playerXpEl = document.getElementById('player-xp');",
      "const playerMaxXpEl = document.getElementById('player-max-xp');",
      "const playerXpBarEl = document.getElementById('player-xp-bar');",
      "const playerAttackEl = document.getElementById('player-attack');",
      "const playerImgEl = document.getElementById('player-img');",
      "",
      "const enemyNameEl = document.getElementById('enemy-name');",
      "const enemyLevelEl = document.getElementById('enemy-level');",
      "const enemyHpEl = document.getElementById('enemy-hp');",
      "const enemyMaxHpEl = document.getElementById('enemy-max-hp');",
      "const enemyHpBarEl = document.getElementById('enemy-hp-bar');",
      "const enemyAttackEl = document.getElementById('enemy-attack');",
      "const enemyImgEl = document.getElementById('enemy-img');",
      "const damageIndicatorEl = document.getElementById('damage-indicator');",
      "",
      "const logListEl = document.getElementById('log-list');",
      "",
      "// Estado do Jogo",
      "let player = {",
      "    level: 1,",
      "    hp: 100,",
      "    maxHp: 100,",
      "    xp: 0,",
      "    maxXp: 50,",
      "    attack: 10",
      "};",
      "",
      "let enemy = {",
      "    name: \"Goblin Fraco\",",
      "    level: 1,",
      "    hp: 50,",
      "    maxHp: 50,",
      "    attack: 5,",
      "    xpReward: 25",
      "};",
      "",
      "let isPlayerTurn = true; // Controla turnos para evitar ataques múltiplos rápidos",
      "let isGameOver = false;",
      "",
      "// --- Funções Auxiliares ---",
      "",
      "function updateUI() {",
      "    // Jogador",
      "    playerLevelEl.textContent = player.level;",
      "    playerHpEl.textContent = Math.max(0, player.hp); // Não mostra HP negativo",
      "    playerMaxHpEl.textContent = player.maxHp;",
      "    playerHpBarEl.style.width = `${Math.max(0, (player.hp / player.maxHp) * 100)}%`;",
      "    playerXpEl.textContent = player.xp;",
      "    playerMaxXpEl.textContent = player.maxXp;",
      "    playerXpBarEl.style.width = `${(player.xp / player.maxXp) * 100}%`;",
      "    playerAttackEl.textContent = player.attack;",
      "",
      "    // Inimigo",
      "    enemyNameEl.textContent = enemy.name;",
      "    enemyLevelEl.textContent = enemy.level;",
      "    enemyHpEl.textContent = Math.max(0, enemy.hp);",
      "    enemyMaxHpEl.textContent = enemy.maxHp;",
      "    enemyHpBarEl.style.width = `${Math.max(0, (enemy.hp / enemy.maxHp) * 100)}%`;",
      "    enemyAttackEl.textContent = enemy.attack;",
      "}",
      "",
      "function addLog(message) {",
      "    const li = document.createElement('li');",
      "    li.textContent = message;",
      "    logListEl.appendChild(li);",
      "    // Auto-scroll para o fim do log",
      "    logListEl.parentElement.scrollTop = logListEl.parentElement.scrollHeight;",
      "    // Limita o número de entradas no log (opcional)",
      "    if (logListEl.children.length > 20) {",
      "        logListEl.removeChild(logListEl.firstChild);",
      "    }",
      "}",
      "",
      "function showDamage(amount, targetElement) {",
      "    damageIndicatorEl.textContent = `-${amount}`;",
      "    // Reposiciona o indicador perto do alvo (simplificado)",
      "    const targetRect = targetElement.getBoundingClientRect();",
      "    const containerRect = document.getElementById('arena').getBoundingClientRect(); ",
      "    damageIndicatorEl.style.top = `${targetRect.top - containerRect.top - 30}px`; // Acima da imagem",
      "    if(targetElement === enemyImgEl) {",
      "       damageIndicatorEl.style.left = `${targetRect.left - containerRect.left + targetRect.width / 2 - 15}px`; // Centralizado horizontalmente",
      "    } else {",
      "         damageIndicatorEl.style.left = `${targetRect.left - containerRect.left + targetRect.width / 2 - 15}px`; ",
      "    }",
      "    ",
      "    damageIndicatorEl.classList.add('show-damage');",
      "    // Remove a classe após a animação",
      "    setTimeout(() => {",
      "        damageIndicatorEl.classList.remove('show-damage');",
      "    }, 500); ",
      "}",
      "",
      "// --- Lógica do Jogo ---",
      "",
      "function playerAttack() {",
      "    if (!isPlayerTurn || isGameOver) return;",
      "    isPlayerTurn = false; // Desabilita ataque até o turno do inimigo terminar",
      "",
      "    // Animação de ataque do jogador",
      "    playerImgEl.classList.add('player-attack-anim');",
      "    setTimeout(() => playerImgEl.classList.remove('player-attack-anim'), 300);",
      "",
      "    const damageDealt = Math.floor(player.attack * (Math.random() * 0.4 + 0.8)); // Dano com variação (80-120%)",
      "    enemy.hp -= damageDealt;",
      "",
      "    addLog(`Você atacou ${enemy.name} causando ${damageDealt} de dano.`);",
      "    showDamage(damageDealt, enemyImgEl);",
      "    enemyImgEl.classList.add('enemy-hit-anim');",
      "    setTimeout(() => enemyImgEl.classList.remove('enemy-hit-anim'), 200);",
      "    ",
      "    updateUI();",
      "",
      "    if (enemy.hp <= 0) {",
      "        enemyDefeated();",
      "        // Não passa o turno para o inimigo se ele foi derrotado",
      "        isPlayerTurn = true; ",
      "    } else {",
      "        // Atraso antes do ataque do inimigo",
      "        setTimeout(enemyAttack, 700); ",
      "    }",
      "}",
      "",
      "function enemyAttack() {",
      "    if (isGameOver || enemy.hp <= 0) {",
      "       isPlayerTurn = true; // Garante que o jogador pode agir se o inimigo já foi derrotado nesse meio tempo",
      "       return;",
      "    }",
      "",
      "    const damageTaken = Math.floor(enemy.attack * (Math.random() * 0.4 + 0.8));",
      "    player.hp -= damageTaken;",
      "",
      "    addLog(`${enemy.name} atacou você causando ${damageTaken} de dano.`);",
      "    // Animação de ser atingido",
      "    playerImgEl.classList.add('player-hit-anim');",
      "    setTimeout(() => playerImgEl.classList.remove('player-hit-anim'), 200);",
      "",
      "    updateUI();",
      "",
      "    if (player.hp <= 0) {",
      "        gameOver();",
      "    } else {",
      "        isPlayerTurn = true; // Libera o turno do jogador",
      "    }",
      "}",
      "",
      "function enemyDefeated() {",
      "    addLog(`Você derrotou ${enemy.name}!`);",
      "    player.xp += enemy.xpReward;",
      "    addLog(`Você ganhou ${enemy.xpReward} XP.`);",
      "    checkLevelUp();",
      "    spawnNewEnemy();",
      "    updateUI();",
      "}",
      "",
      "function checkLevelUp() {",
      "    if (player.xp >= player.maxXp) {",
      "        player.level++;",
      "        player.xp -= player.maxXp; // Subtrai o XP necessário (pode sobrar XP)",
      "        player.maxXp = Math.floor(player.maxXp * 1.5); // Aumenta o XP necessário para o próximo nível",
      "        player.maxHp = Math.floor(player.maxHp * 1.2);",
      "        player.hp = player.maxHp; // Recupera todo o HP ao subir de nível",
      "        player.attack = Math.floor(player.attack * 1.3);",
      "        addLog(`--------------------------------`);",
      "        addLog(`LEVEL UP! Você alcançou o nível ${player.level}!`);",
      "        addLog(`HP e Ataque aumentados! HP restaurado!`);",
      "        addLog(`--------------------------------`);",
      "        // Verifica se ainda tem XP suficiente para outro level up (caso ganhe muito XP)",
      "        checkLevelUp(); ",
      "    }",
      "}",
      "",
      "function spawnNewEnemy() {",
      "    enemy.level++;",
      "    // Nomes de inimigos simples baseados no nível",
      "    const enemyTypes = [\"Goblin\", \"Lobo das Sombras\", \"Cavaleiro Corrompido\", \"Ogro Mutante\", \"Demônio Inferior\"];",
      "    const typeIndex = Math.min(Math.floor((enemy.level-1) / 3), enemyTypes.length - 1); // Muda tipo a cada 3 níveis",
      "    enemy.name = `${enemyTypes[typeIndex]} (Nv. ${enemy.level})`;",
      "    ",
      "    // Escala HP e Ataque com o nível",
      "    enemy.maxHp = Math.floor(50 * Math.pow(1.25, enemy.level - 1));",
      "    enemy.hp = enemy.maxHp;",
      "    enemy.attack = Math.floor(5 * Math.pow(1.2, enemy.level - 1));",
      "    enemy.xpReward = Math.floor(25 * Math.pow(1.3, enemy.level - 1));",
      "",
      "    addLog(`Um novo inimigo apareceu: ${enemy.name}!`);",
      "}",
      "",
      "function gameOver() {",
      "    isGameOver = true;",
      "    addLog(\"===== GAME OVER =====\");",
      "    addLog(\"Você foi derrotado... Atualize a página para tentar novamente.\");",
      "    // Poderia adicionar um botão de reiniciar aqui",
      "    enemyImgEl.style.cursor = 'default';",
      "}",
      "",
      "// --- Inicialização ---",
      "enemyImgEl.addEventListener('click', playerAttack);",
      "updateUI(); // Mostra os status iniciais",
      "addLog(`Um ${enemy.name} apareceu! Prepare-se!`);"
    ]
  },
    "PARTE 4": {
    "arquivo": "svg/player.svg",
    "codigo": [
       "<svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 100 100\" width=\"100\" height=\"100\">",
       "  <defs>",
       "    <filter id=\"glow\" x=\"-50%\" y=\"-50%\" width=\"200%\" height=\"200%\">",
       "      <feGaussianBlur stdDeviation=\"3\" result=\"coloredBlur\"/>",
       "      <feMerge>",
       "        <feMergeNode in=\"coloredBlur\"/>",
       "        <feMergeNode in=\"SourceGraphic\"/>",
       "      </feMerge>",
       "    </filter>",
       "  </defs>",
       "  <g stroke=\"#00bfff\" stroke-width=\"2\" fill=\"#1a1a2e\" filter=\"url(#glow)\">",
       "    <!-- Cabeça -->",
       "    <circle cx=\"50\" cy=\"25\" r=\"10\"/>",
       "    <!-- Corpo -->",
       "    <line x1=\"50\" y1=\"35\" x2=\"50\" y2=\"65\"/>",
       "    <!-- Braços -->",
       "    <line x1=\"50\" y1=\"45\" x2=\"30\" y2=\"55\"/>",
       "    <line x1=\"50\" y1=\"45\" x2=\"70\" y2=\"55\"/>",
       "    <!-- Pernas -->",
       "    <line x1=\"50\" y1=\"65\" x2=\"40\" y2=\"85\"/>",
       "    <line x1=\"50\" y1=\"65\" x2=\"60\" y2=\"85\"/>",
       "    <!-- Adagas (simples) -->",
       "    <line x1=\"28\" y1=\"53\" x2=\"20\" y2=\"68\" stroke-width=\"3\"/>",
       "    <line x1=\"72\" y1=\"53\" x2=\"80\" y2=\"68\" stroke-width=\"3\"/>",
       "  </g>",
       "</svg>"
        ]
    },
    "PARTE 5": {
        "arquivo": "svg/enemy.svg",
        "codigo": [
          "<svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 100 100\" width=\"100\" height=\"100\">",
          "  <g fill=\"#8B4513\" stroke=\"#5D2A0C\" stroke-width=\"1.5\"> <!-- Marrom escuro -->",
          "    <!-- Cabeça grande e irregular -->",
          "    <path d=\"M 40 15 Q 50 10 60 15 Q 75 25 70 40 Q 65 55 50 58 Q 35 55 30 40 Q 25 25 40 15 Z\"/>",
          "    <!-- Olhos (simples) -->",
          "    <circle cx=\"45\" cy=\"30\" r=\"3\" fill=\"#FF0000\"/> <!-- Vermelho -->",
          "    <circle cx=\"55\" cy=\"30\" r=\"3\" fill=\"#FF0000\"/>",
          "    <!-- Corpo robusto -->",
          "    <path d=\"M 30 55 Q 20 70 35 85 L 65 85 Q 80 70 70 55 Z\"/>",
          "    <!-- Braços curtos e grossos -->",
          "    <path d=\"M 25 60 Q 15 65 18 75 L 28 78 Q 32 65 25 60 Z\"/>",
          "    <path d=\"M 75 60 Q 85 65 82 75 L 72 78 Q 68 65 75 60 Z\"/>",
          "  </g>",
          "</svg>"
        ]
    },
  "texto_final": [
      "Instruções:",
      "1. Crie uma pasta chamada `solo-leveling-game`.",
      "2. Dentro dela, crie os arquivos `index.html`, `style.css` e `script.js`.",
      "3. Copie e cole o conteúdo de 'PARTE 1' para `index.html`.",
      "4. Copie e cole o conteúdo de 'PARTE 2' para `style.css`.",
      "5. Copie e cole o conteúdo de 'PARTE 3' para `script.js`.",
      "6. Crie uma subpasta chamada `svg` dentro de `solo-leveling-game`.",
      "7. Dentro da pasta `svg`, crie o arquivo `player.svg`.",
      "8. Copie e cole o conteúdo de 'PARTE 4' para `svg/player.svg`.",
      "9. Dentro da pasta `svg`, crie o arquivo `enemy.svg`.",
      "10. Copie e cole o conteúdo de 'PARTE 5' para `svg/enemy.svg`.",
      "11. Abra o arquivo `index.html` em seu navegador web.",
      "12. Clique na imagem do inimigo para atacar.",
      "Nota: Este é um jogo *muito* simplificado inspirado em Solo Leveling. Ele implementa um combate básico por clique, sistema de níveis e inimigos progressivamente mais fortes."
      ]
}
